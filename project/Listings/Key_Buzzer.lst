C51 COMPILER V9.60.0.0   KEY_BUZZER                                                        01/04/2021 15:27:23 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEY_BUZZER
OBJECT MODULE PLACED IN ..\output\Key_Buzzer.obj
COMPILER INVOKED BY: D:\app\keil\C51\BIN\C51.EXE ..\source\Key_Buzzer.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\Key_Buzzer.lst) TABS(2) OBJECT(..\output\Key_Buzzer.obj)

line level    source

   1          #include "config.h"
   2          #include "app.h"
   3          #include "Key_Buzzer.h"
   4          
   5          uint8 code KeyCodeMap[4] = { //4位独立按键到标注按键的映射表
   6            0x0d,//回车键
   7            0x26,//上键
   8            0x28,//下键
   9            0x1b //ESC键
  10          };
  11          
  12          uint8 pdata KeySta[4] = { //4位独立按键当前状态
  13            1, 1, 1, 1
  14          };
  15          
  16          void KeyDriver()
  17          {
  18   1        uint8 i;
  19   1        static uint8 pdata backup[4] = {  //4位独立按键备份值
  20   1            1, 1, 1, 1
  21   1        };
  22   1        for (i=0; i<4; i++)//循环检测4个独立按键
  23   1        {
  24   2          if (backup[i] != KeySta[i])//检测按键
  25   2          {
  26   3            if(backup[i] != 0) //如果按键按下
  27   3            {
  28   4              KeyAction(KeyCodeMap[i]); //调用按键动作函数
  29   4            }
  30   3            backup[i] = KeySta[i];//刷新备份值
  31   3          }
  32   2        } 
  33   1      }
  34          
  35          /* 按键扫描函数，需在定时中断中调用，间隔4ms*/
  36          void KeyScan()
  37          {
  38   1        uint8 i;
  39   1        static uint8 flag = 0; //消抖计数
  40   1        static uint8 keybuf[4] = { //4位独立按键扫描缓冲区
  41   1          0xff, 0xff, 0xff, 0xff
  42   1        };
  43   1      
  44   1        //将4个独立按键值移入缓冲区
  45   1          keybuf[0] = (keybuf[0] << 1) | KEY_S2;
  46   1          keybuf[1] = (keybuf[1] << 1) | KEY_S3;
  47   1          keybuf[2] = (keybuf[2] << 1) | KEY_S4;
  48   1          keybuf[3] = (keybuf[3] << 1) | KEY_S5;
  49   1        
  50   1        flag++; //间隔5ms扫描一次
  51   1        if(flag == 4)//4次就是20ms 完成消抖
  52   1        {
  53   2          flag = 0;//扫描次数清零
  54   2          for (i=0; i<4; i++)  //读取4个独立的值
C51 COMPILER V9.60.0.0   KEY_BUZZER                                                        01/04/2021 15:27:23 PAGE 2   

  55   2          {
  56   3            if ((keybuf[i] & 0x0f) == 0x00)
  57   3              {
  58   4                KeySta[i] = 0;//如果4次扫描的值都为0，即按下状态
  59   4              }
  60   3              else if ((keybuf[i] & 0x0f) == 0x0f)
  61   3              {
  62   4                KeySta[i] = 1;//如果4次扫描的值都为1，即弹起状态  
  63   4              }
  64   3          } 
  65   2        }
  66   1            
  67   1      }
  68          
  69          /*蜂鸣器控制*/
  70          void staBuzzer(bit e)
  71          {
  72   1        if (e  == 1)
  73   1          BUZZER = 0;
  74   1        else
  75   1          BUZZER = 1; 
  76   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    178    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      8    ----
   DATA SIZE        =      5       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

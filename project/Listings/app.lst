C51 COMPILER V9.60.0.0   APP                                                               01/04/2021 15:27:24 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE APP
OBJECT MODULE PLACED IN ..\output\app.obj
COMPILER INVOKED BY: D:\app\keil\C51\BIN\C51.EXE ..\source\app.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\app.lst) TABS(2) OBJECT(..\output\app.obj)

line level    source

   1          #include "config.h"
   2          #include "Lcd1602.h"
   3          #include "DS1302.h"
   4          #include "Key_Buzzer.h"
   5          #include "DS18B20.h"
   6          #include "lunar.h"
   7          #include "main.h"
   8          #include "app.h"
   9          
  10          struct sTime CurTime;   //当前日期时间
  11          uint8 SetIndex = 0;   //设置位索引
  12          bit AlarmOn = 0;      //闹钟开关志位
  13          uint8 AlarmHour = 0x06; //闹钟时间的小时数，闹钟默认值6:30
  14          uint8 AlarmMin  = 0x30; //闹钟时间的分钟数
  15          uint8 pdata SetDat;   //设置时间日期数据缓存
  16          
  17          uint8 code *week[8] = {//星期显示字符表
  18              "    ", "Mon ", "Tues", "Wed ", "Thur", "Fri ", "Sat ", "Sun "
  19            };
  20          uint8 code *AlarmSta[2] = {//闹钟开关显示字符表
  21              "ON ", "OFF"  
  22            };
  23          
  24          /*BCD码转十进制*/
  25          uint8 BCD_DEC(uint8 BCD)
  26          {
  27   1        uint8 DEC;
  28   1        DEC= BCD / 16;
  29   1        BCD %= 16;
  30   1        BCD += DEC * 10;
  31   1      
  32   1        return BCD;
  33   1      }
  34          /*十进制转BCD*/
  35          uint8 DEC_BCD(uint8 DEC)
  36          {
  37   1        uint8 BCD;
  38   1        BCD = DEC / 10;
  39   1        DEC %= 10;
  40   1        DEC += BCD * 16;
  41   1      
  42   1        return DEC;
  43   1      }
  44          
  45          /* 获取当前时间，并刷新显示 */
  46          void RefreshTime()
  47          {
  48   1        uint8 pdata time[10];
  49   1        GetRealTime(&CurTime); //获取当前日期/时间
  50   1        time[0] = (CurTime.hour >> 4) + '0';   //小时十位
  51   1        time[1] = (CurTime.hour & 0x0f) + '0'; //小时个位
  52   1        time[2] = ':';  
  53   1        time[3] = (CurTime.min >> 4) + '0';    //分钟十位
  54   1        time[4] = (CurTime.min & 0x0f) + '0';  //分钟个位
C51 COMPILER V9.60.0.0   APP                                                               01/04/2021 15:27:24 PAGE 2   

  55   1        time[5] = ':';
  56   1        time[6] = (CurTime.sec >> 4) + '0';    //秒钟十位
  57   1        time[7] = (CurTime.sec & 0x0f) + '0';  //秒钟个位
  58   1        time[8] = '\0';                  //字符串结束符
  59   1        LCD1602_Dis_Str(0, 1, time);         //显示到液晶上
  60   1      } 
  61          
  62          /* 日期刷新函数，ops-刷新选项：为0时只当日期变化才刷新，非0则立即刷新 */
  63          void RefreshDate(uint8 ops)
  64          {
  65   1          uint8 pdata date[12];
  66   1          static uint8 backup = 0;
  67   1      
  68   1          if ((backup!=CurTime.day) || (ops!=0))//如果日期变化或刷新标志位置1则立即刷新
  69   1          {
  70   2          date[0] = ((CurTime.year>>12) & 0x0f) + '0';  //年份千位
  71   2              date[1] = ((CurTime.year>>8) & 0x0f) + '0';   //年份百位
  72   2              date[2] = ((CurTime.year>>4) & 0x0f) + '0';   //年份十位
  73   2              date[3] = (CurTime.year & 0x0f) + '0';      //年份个位
  74   2              date[4] = '-';                              //分隔符
  75   2              date[5] = (CurTime.mon >> 4) + '0';         //月份十位
  76   2              date[6] = (CurTime.mon & 0x0f) + '0';       //月份个位
  77   2              date[7] = '-';                              //分隔符
  78   2              date[8] = (CurTime.day >> 4) + '0';         //日期十位
  79   2              date[9] = (CurTime.day & 0x0f) + '0';       //日期个位
  80   2              date[10] = '\0';                    //字符串结束符
  81   2              LCD1602_Dis_Str(0, 0, date);            //显示到液晶上
  82   2          LCD1602_Dis_Str(12, 0, week[CurTime.week]);   //显示星期
  83   2              backup = CurTime.day;               //刷新上次日期值
  84   2          }
  85   1      }
  86          /*刷新阴历*/
  87          void RefreshLunar()
  88          {
  89   1        uint8 pdata date[12];
  90   1        GetRealTime(&CurTime); //获取当前日期/时间
  91   1        Conversion(0, CurTime.year, CurTime.mon, CurTime.day);//根据公历算出阴历
  92   1        date[0] = 0x02 + '0';  //年份千位
  93   1        date[1] = 0x00 + '0';   //年份百位
  94   1        date[2] = ((SpDate.year>>4) & 0x0f) + '0';    //年份十位
  95   1        date[3] = (SpDate.year & 0x0f) + '0';     //年份个位
  96   1        date[4] = '-';                              //分隔符
  97   1        date[5] = (SpDate.mon >> 4) + '0';        //月份十位
  98   1        date[6] = (SpDate.mon & 0x0f) + '0';      //月份个位
  99   1        date[7] = '-';                              //分隔符
 100   1        date[8] = (SpDate.day >> 4) + '0';        //日期十位
 101   1        date[9] = (SpDate.day & 0x0f) + '0';      //日期个位
 102   1        date[10] = '\0';                    //字符串结束符
 103   1        LCD1602_Dis_Str(0, 0, "Lunar");         //阴历字符    
 104   1        LCD1602_Dis_Str(6, 0, date);            //显示到液晶上 
 105   1      }
 106          
 107          /* 刷新闹钟的显示 */
 108          void RefreshAlarm()
 109          {
 110   1          uint8 pdata str[6];
 111   1          
 112   1          str[0] = (AlarmHour >> 4) + '0';        //闹钟小时数
 113   1          str[1] = (AlarmHour & 0x0f) + '0';
 114   1          str[2] = ':';                           //分隔符
 115   1          str[3] = (AlarmMin >> 4) + '0';         //闹钟分钟数
 116   1          str[4] = (AlarmMin & 0x0f) + '0';
C51 COMPILER V9.60.0.0   APP                                                               01/04/2021 15:27:24 PAGE 3   

 117   1          str[5] = '\0';                          //字符串结束符
 118   1        LCD1602_Dis_Str(0, 1, "Alarm ");        //显示提示标题
 119   1        LCD1602_Dis_Str(13, 1, AlarmSta[AlarmOn]);  //显示闹钟状态 
 120   1          LCD1602_Dis_Str(6, 1, str);               //显示到液晶上
 121   1      }
 122          
 123          /* 闹钟监控函数，抵达设定的闹钟时间时执行闹铃 */
 124          void AlarmMonitor()
 125          {
 126   1          if ((CurTime.hour == AlarmHour) && (CurTime.min == AlarmMin)) //检查时间匹配
 127   1          {
 128   2              if (!AlarmOn)      //检查闹钟是否打开
 129   2                  staBuzzer(1);  //蜂鸣器鸣叫
 130   2              else
 131   2                  staBuzzer(0);  //蜂鸣器停止鸣叫
 132   2          }
 133   1          else
 134   1          {
 135   2              staBuzzer(0);      //时间不匹配时，蜂鸣器停止鸣叫
 136   2          } 
 137   1      }
 138          
 139          /* S2按键功能函数，时间或闹钟设置时，光标移动，到头后折回 */
 140          void SetShift()
 141          {
 142   1          if (staSystem == E_SET_TIME)  //设置时间光标
 143   1          {
 144   2          switch (SetIndex)
 145   2              {
 146   3                  case 0: SetIndex=1;  LCD1602_Set_Cursor(7, 1); break;//光标位于秒钟个位处
 147   3                  case 1: SetIndex=2;  LCD1602_Set_Cursor(4, 1); break;//光标位于分钟处
 148   3                  case 2: SetIndex=3;  LCD1602_Set_Cursor(1, 1); break;//光标位于小时处
 149   3                  case 3: SetIndex=4;  LCD1602_Set_Cursor(12, 0); break;//光标位于星期处
 150   3                  case 4: SetIndex=5;  LCD1602_Set_Cursor(9, 0); break;//光标位于日处
 151   3                  case 5: SetIndex=6;  LCD1602_Set_Cursor(6, 0); break;//光标位于月处
 152   3                  default: SetIndex=0; LCD1602_Set_Cursor(3, 0); break;//光标位于年处
 153   3              }
 154   2          }
 155   1          else if (staSystem == E_SET_ALARM) //设置闹钟光标
 156   1          {
 157   2              switch (SetIndex)
 158   2              {
 159   3                  case 0: SetIndex=1;  LCD1602_Set_Cursor(13, 1); break;//光标位于闹钟开关处
 160   3            case 1: SetIndex=2;  LCD1602_Set_Cursor(10, 1); break;//光标位于闹钟分钟处
 161   3                  default: SetIndex=0; LCD1602_Set_Cursor(7, 1); break; //光标位于闹钟小时处
 162   3              }
 163   2          }
 164   1        else if (staSystem == E_NORMAL)//正常运行状态下，切换为显示阴历/闹钟
 165   1        {
 166   2          staSystem = Dis_Alarm;     //把系统状态更新为显示阴历/闹钟
 167   2          LCD1602_Clear_Screen();    //LCD1602清屏
 168   2          RefreshLunar();        //显示阴历
 169   2          RefreshAlarm();        //显示闹钟
 170   2        }
 171   1        else if (staSystem == Dis_Alarm)//显示阴历/闹钟状态下，按S2可以切回显示公历和时间
 172   1        {
 173   2          staSystem = E_NORMAL;     //把系统状态更新为正常显示
 174   2          LCD1602_Clear_Screen();   //LCD1602清屏
 175   2          RefreshTime();        //刷新时间
 176   2          RefreshDate(1);       //立即刷新日期
 177   2          RefreshTemp(1);       //立即刷新温度
 178   2        }
C51 COMPILER V9.60.0.0   APP                                                               01/04/2021 15:27:24 PAGE 4   

 179   1      }
 180          
 181          /* S5按键功能函数，切换系统运行状态 */
 182          void SwitchSystemSta()
 183          {
 184   1          if (staSystem == E_NORMAL)  //正常运行切换到时间设置
 185   1          {
 186   2              staSystem = E_SET_TIME; //系统状态更新为设置时间
 187   2              SetIndex = 0;       //光标索引设置到秒钟上
 188   2              SetShift();       //显示光标位置
 189   2              LCD1602_Open_Cursor();  //LCD1602打开光标显示
 190   2          }
 191   1          else if (staSystem == Dis_Alarm)//显示阴历/闹钟时，切换到设置闹钟
 192   1          {
 193   2              staSystem = E_SET_ALARM;  //系统状态更新为设置闹钟
 194   2              SetIndex = 0;         //光标索引设置到秒钟上
 195   2              SetShift();         //显示光标位置
 196   2          LCD1602_Open_Cursor();    //LCD1602打开光标显示
 197   2          }
 198   1        else if (staSystem == E_SET_TIME)//设置公历/时钟的状态下
 199   1        {
 200   2          staSystem = E_NORMAL;    //系统状态更新为正常运行，显示公历/时钟、温度。
 201   2          SetRealTime(&CurTime);       //把设定时间写入实时时钟
 202   2          LCD1602_Close_Cursor();    //LCD1602关闭光标显示
 203   2              LCD1602_Clear_Screen();    //LCD1602清屏
 204   2          RefreshTime();         //刷新时间
 205   2          RefreshDate(1);        //立即刷新日期
 206   2          RefreshTemp(1);        //立即刷新温度 
 207   2        }
 208   1          else                 //设置闹钟的状态下
 209   1          {
 210   2              staSystem = E_NORMAL;    //系统状态更新为正常运行，显示公历/时钟、温度。
 211   2            RefreshAlarm();        //写入闹钟设定值
 212   2              LCD1602_Close_Cursor();    //LCD1602关闭光标显示
 213   2              LCD1602_Clear_Screen();    //LCD1602清屏
 214   2          RefreshTime();           //刷新时间
 215   2          RefreshDate(1);        //立即刷新日期
 216   2          RefreshTemp(1);        //立即刷新温度
 217   2          }
 218   1      }
 219          /*S3按键功能函数，数据加*/
 220          void SetDtate_Alarm_S3()
 221          {
 222   1        if (staSystem == E_SET_TIME) //设置公历/时间
 223   1          {
 224   2          switch (SetIndex)//检查光标位置
 225   2              {       
 226   3            case 1: SetDat = BCD_DEC(CurTime.sec);//把BCD码转为十进制
 227   3                if (SetDat < 59) SetDat++; else SetDat = 0;//限制设置秒钟不超过59秒，超过则回到0
 228   3                CurTime.sec = DEC_BCD(SetDat);//把十进制转为BCD码
 229   3                LCD1602_Dis_OneChar(6, 1, (CurTime.sec >> 4) + '0');
 230   3                LCD1602_Dis_OneChar(7, 1, (CurTime.sec & 0x0f) + '0');
 231   3                LCD1602_Set_Cursor(7, 1);//光标保持原位
 232   3                break;
 233   3      
 234   3            case 2: SetDat = BCD_DEC(CurTime.min);//把BCD码转为十进制
 235   3                if (SetDat < 59) SetDat++; else SetDat = 0;//限制设置分钟不超过59分，超过则回到0
 236   3                CurTime.min = DEC_BCD(SetDat);//把十进制转为BCD码
 237   3                LCD1602_Dis_OneChar(3, 1, (CurTime.min >> 4) + '0');
 238   3                LCD1602_Dis_OneChar(4, 1, (CurTime.min & 0x0f) + '0');
 239   3                LCD1602_Set_Cursor(4, 1);//光标保持原位
 240   3                break;
C51 COMPILER V9.60.0.0   APP                                                               01/04/2021 15:27:24 PAGE 5   

 241   3      
 242   3            case 3: SetDat = BCD_DEC(CurTime.hour);//把BCD码转为十进制
 243   3                if (SetDat < 23) SetDat++; else SetDat = 0;//限制设置小时不超过23时，超过则回到0
 244   3                CurTime.hour = DEC_BCD(SetDat);//把十进制转为BCD码
 245   3                LCD1602_Dis_OneChar(0, 1, (CurTime.hour >> 4) + '0');
 246   3                LCD1602_Dis_OneChar(1, 1, (CurTime.hour & 0x0f) + '0');
 247   3                LCD1602_Set_Cursor(1, 1);//光标保持原位
 248   3                break;
 249   3      
 250   3            case 4: //限制不超过星期日，如果超过则回到周一
 251   3                if (CurTime.week < 7) CurTime.week++; else CurTime.week = 1;
 252   3                LCD1602_Dis_Str(12, 0, week[CurTime.week]);  //显示到液晶上;
 253   3                LCD1602_Set_Cursor(12, 0);//光标保持原位
 254   3                break;
 255   3      
 256   3            case 5: SetDat = BCD_DEC(CurTime.day);//把BCD码转为十进制
 257   3                if (SetDat < 31) SetDat++; else SetDat = 1;//限制设置日期不超过31日，超过则回到1
 258   3                CurTime.day = DEC_BCD(SetDat);//把十进制转为BCD码
 259   3                LCD1602_Dis_OneChar(8, 0, (CurTime.day >> 4) + '0');
 260   3                LCD1602_Dis_OneChar(9, 0, (CurTime.day & 0x0f) + '0');
 261   3                LCD1602_Set_Cursor(9, 0);//光标保持原位
 262   3                break;
 263   3      
 264   3            case 6: SetDat = BCD_DEC(CurTime.mon);//把BCD码转为十进制
 265   3                if (SetDat < 12) SetDat++; else SetDat = 1;//限制设置月份不超过12月，超过则回到1
 266   3                CurTime.mon = DEC_BCD(SetDat);//把十进制转为BCD码
 267   3                LCD1602_Dis_OneChar(5, 0, (CurTime.mon >> 4) + '0');
 268   3                LCD1602_Dis_OneChar(6, 0, (CurTime.mon & 0x0f) + '0');
 269   3                LCD1602_Set_Cursor(6, 0);//光标保持原位
 270   3                break;
 271   3      
 272   3            case 0: SetDat = BCD_DEC(CurTime.year);//把BCD码转为十进制
 273   3                if (SetDat < 99) SetDat++; else SetDat = 0;//限制设置年不超过99年，超过则回到0
 274   3                CurTime.year = DEC_BCD(SetDat);//把十进制转为BCD码
 275   3                LCD1602_Dis_OneChar(2, 0, (CurTime.year >> 4) + '0');
 276   3                LCD1602_Dis_OneChar(3, 0, (CurTime.year & 0x0f) + '0');
 277   3                LCD1602_Set_Cursor(3, 0);//光标保持原位
 278   3                break;
 279   3          } 
 280   2        }
 281   1        else if (staSystem == E_SET_ALARM)//设置闹钟
 282   1        {
 283   2          switch (SetIndex)//检查光标位置
 284   2              {
 285   3            case 1: AlarmOn = ~AlarmOn;
 286   3                LCD1602_Dis_Str(13, 1, AlarmSta[AlarmOn]);//显示闹钟状态 
 287   3                LCD1602_Set_Cursor(13, 1);//光标保持原位
 288   3                break;
 289   3                      
 290   3            case 2: SetDat = BCD_DEC(AlarmMin);//把BCD码转为十进制
 291   3                if (SetDat < 59) SetDat++; else SetDat = 0;//限制设置分钟不超过59分，超过则回到0
 292   3                AlarmMin = DEC_BCD(SetDat);//把十进制转为BCD码
 293   3                LCD1602_Dis_OneChar(9, 1, (AlarmMin >> 4) + '0');
 294   3                LCD1602_Dis_OneChar(10, 1, (AlarmMin & 0x0f) + '0');
 295   3                LCD1602_Set_Cursor(10, 1);//光标保持原位
 296   3                break;
 297   3      
 298   3            case 0: SetDat = BCD_DEC(AlarmHour);//把BCD码转为十进制
 299   3                if (SetDat < 23) SetDat++; else SetDat = 0;//限制设置小时不超过23时，超过则回到0
 300   3                AlarmHour = DEC_BCD(SetDat);//把十进制转为BCD码 
 301   3                LCD1602_Dis_OneChar(6, 1, (AlarmHour >> 4) + '0');
 302   3                LCD1602_Dis_OneChar(7, 1, (AlarmHour & 0x0f) + '0');
C51 COMPILER V9.60.0.0   APP                                                               01/04/2021 15:27:24 PAGE 6   

 303   3                LCD1602_Set_Cursor(7, 1);//光标保持原位
 304   3                break;
 305   3          }   
 306   2        } 
 307   1      }
 308          /*S4按键功能函数，数据减*/
 309          void SetDtate_Alarm_S4()
 310          {
 311   1        if (staSystem == E_SET_TIME) //设置公历/时间
 312   1          {
 313   2          switch (SetIndex) //检查光标位置
 314   2              {       
 315   3            case 1: SetDat = BCD_DEC(CurTime.sec);//把BCD码转为十进制
 316   3                if (SetDat != 0) SetDat--; else SetDat = 59;//限制设置秒钟不为0时减1，为0时回到59
 317   3                CurTime.sec = DEC_BCD(SetDat);//把十进制转为BCD码
 318   3                LCD1602_Dis_OneChar(6, 1, (CurTime.sec >> 4) + '0');
 319   3                LCD1602_Dis_OneChar(7, 1, (CurTime.sec & 0x0f) + '0');
 320   3                LCD1602_Set_Cursor(7, 1);//光标保持原位
 321   3                break;
 322   3      
 323   3            case 2: SetDat = BCD_DEC(CurTime.min);//把BCD码转为十进制
 324   3                if (SetDat != 0) SetDat--; else SetDat = 59;//限制设置分钟不为0时减1，为0时回到59
 325   3                CurTime.min = DEC_BCD(SetDat);//把十进制转为BCD码
 326   3                LCD1602_Dis_OneChar(3, 1, (CurTime.min >> 4) + '0');
 327   3                LCD1602_Dis_OneChar(4, 1, (CurTime.min & 0x0f) + '0');
 328   3                LCD1602_Set_Cursor(4, 1);//光标保持原位
 329   3                break;
 330   3      
 331   3            case 3: SetDat = BCD_DEC(CurTime.hour);//把BCD码转为十进制
 332   3                if (SetDat != 0) SetDat--; else SetDat = 23;//限制设置小时不为0时减1，为0时回到23
 333   3                CurTime.hour = DEC_BCD(SetDat);//把十进制转为BCD码
 334   3                LCD1602_Dis_OneChar(0, 1, (CurTime.hour >> 4) + '0');
 335   3                LCD1602_Dis_OneChar(1, 1, (CurTime.hour & 0x0f) + '0');
 336   3                LCD1602_Set_Cursor(1, 1);//光标保持原位
 337   3                break;
 338   3      
 339   3            case 4: //如果为当前为星期一时，回到星期天
 340   3                if (CurTime.week != 1) CurTime.week--; else CurTime.week = 7;
 341   3                LCD1602_Dis_Str(12, 0, week[CurTime.week]);  //显示到液晶上;
 342   3                LCD1602_Set_Cursor(12, 0);//光标保持原位
 343   3                break;
 344   3      
 345   3            case 5: SetDat = BCD_DEC(CurTime.day);//把BCD码转为十进制
 346   3                if (SetDat != 1) SetDat--; else SetDat = 31;//限制设置日期不为1时减1，为0时回到31
 347   3                CurTime.day = DEC_BCD(SetDat);//把十进制转为BCD码
 348   3                LCD1602_Dis_OneChar(8, 0, (CurTime.day >> 4) + '0');
 349   3                LCD1602_Dis_OneChar(9, 0, (CurTime.day & 0x0f) + '0');
 350   3                LCD1602_Set_Cursor(9, 0);//光标保持原位
 351   3                break;
 352   3      
 353   3            case 6: SetDat = BCD_DEC(CurTime.mon);//把BCD码转为十进制
 354   3                if (SetDat != 1) SetDat--; else SetDat = 12;//限制设置月份不为1时减1，为0时回到12
 355   3                CurTime.mon = DEC_BCD(SetDat);//把十进制转为BCD码
 356   3                LCD1602_Dis_OneChar(5, 0, (CurTime.mon >> 4) + '0');
 357   3                LCD1602_Dis_OneChar(6, 0, (CurTime.mon & 0x0f) + '0');
 358   3                LCD1602_Set_Cursor(6, 0);//光标保持原位
 359   3                break;
 360   3      
 361   3            case 0: SetDat = BCD_DEC(CurTime.year);//把BCD码转为十进制
 362   3                if (SetDat != 0) SetDat--; else SetDat = 99;//限制设置年不为0时减1，为0时回到99
 363   3                CurTime.year = DEC_BCD(SetDat);//把十进制转为BCD码
 364   3                LCD1602_Dis_OneChar(2, 0, (CurTime.year >> 4) + '0');
C51 COMPILER V9.60.0.0   APP                                                               01/04/2021 15:27:24 PAGE 7   

 365   3                LCD1602_Dis_OneChar(3, 0, (CurTime.year & 0x0f) + '0');
 366   3                LCD1602_Set_Cursor(3, 0);//光标保持原位
 367   3                break;
 368   3          }   
 369   2        }
 370   1        else if (staSystem == E_SET_ALARM) //设置闹钟
 371   1        {
 372   2          switch (SetIndex) //检查光标位置
 373   2              {
 374   3            case 1: AlarmOn = ~AlarmOn;
 375   3                LCD1602_Dis_Str(13, 1, AlarmSta[AlarmOn]);//显示闹钟状态 
 376   3                LCD1602_Set_Cursor(13, 1);//光标保持原位
 377   3                break;
 378   3      
 379   3            case 2: SetDat = BCD_DEC(AlarmMin);//把BCD码转为十进制
 380   3                if (SetDat != 0) SetDat--; else SetDat = 59;//限制设置分钟不为0时减1，为0时回到59
 381   3                AlarmMin = DEC_BCD(SetDat);//把十进制转为BCD码 
 382   3                LCD1602_Dis_OneChar(9, 1, (AlarmMin >> 4) + '0');
 383   3                LCD1602_Dis_OneChar(10, 1, (AlarmMin & 0x0f) + '0');
 384   3                LCD1602_Set_Cursor(10, 1);//光标保持原位
 385   3                break;
 386   3      
 387   3            case 0: SetDat = BCD_DEC(AlarmHour);//把BCD码转为十进制
 388   3                if (SetDat != 0) SetDat--; else SetDat = 23;//限制设置小时不为0时减1，为0时回到59
 389   3                AlarmHour = DEC_BCD(SetDat);//把十进制转为BCD码
 390   3                LCD1602_Dis_OneChar(6, 1, (AlarmHour >> 4) + '0');
 391   3                LCD1602_Dis_OneChar(7, 1, (AlarmHour & 0x0f) + '0');
 392   3                LCD1602_Set_Cursor(7, 1);//光标保持原位
 393   3                break;
 394   3          }   
 395   2        } 
 396   1      }
 397          
 398          
 399          /*按键驱动*/
 400          void KeyAction(uint8 keycode)
 401          {
 402   1        switch (keycode)
 403   1        {
 404   2          case 0x0d: SetShift();          break;  //按下S2,显示切换键，在设置状态下为设置左移键
 405   2              case 0x26: SetDtate_Alarm_S3(); break;  //按下S3,数据加
 406   2              case 0x28: SetDtate_Alarm_S4(); break;  //按下S4,数据减
 407   2              case 0x1b: SwitchSystemSta();   break;  //按下S5,设置键
 408   2          default: break;
 409   2        }
 410   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2108    ----
   CONSTANT SIZE    =     61    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      1      40
   DATA SIZE        =     32    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.60.0.0   LCD1602                                                           01/02/2021 20:11:11 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN ..\output\LCD1602.obj
COMPILER INVOKED BY: D:\app\keil\C51\BIN\C51.EXE ..\source\LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\LCD1602.lst) TABS(2) OBJECT(..\output\LCD1602.obj)

line level    source

   1          /*
   2            LCD1602显示底层驱动
   3          */
   4          
   5          
   6          #include "config.h"
   7          #include "LCD1602.h"
   8          
   9          /*=================================================
  10          *函数名称：Read_Busy
  11          *函数功能：判断1602液晶忙，并等待
  12          =================================================*/
  13          void Read_Busy()
  14          {
  15   1        uint8 busy;
  16   1        LCD1602_DB = 0xff;//复位数据总线
  17   1        LCD1602_RS = 0;   //拉低RS
  18   1        LCD1602_RW = 1;   //拉高RW读
  19   1        do
  20   1        {
  21   2          LCD1602_EN = 1;//使能EN
  22   2          busy = LCD1602_DB;//读回数据
  23   2          LCD1602_EN = 0;  //拉低使能以便于下一次产生上升沿
  24   2        }while(busy & 0x80); //判断状态字BIT7位是否为1，为1则表示忙，程序等待
  25   1      }
  26          /*=================================================
  27          *函数名称：LCD1602_Write_Cmd
  28          *函数功能：写LCD1602命令
  29          *调用：Read_Busy();
  30          *输入：cmd:要写的命令
  31          =================================================*/
  32          void LCD1602_Write_Cmd(uint8 cmd)
  33          {
  34   1        Read_Busy();   //判断忙，忙则等待
  35   1        LCD1602_RS = 0;  //选择为写命令
  36   1        LCD1602_RW = 0; //模式为写
  37   1        LCD1602_DB = cmd;//写入命令
  38   1        LCD1602_EN = 1;  //拉高使能端 数据被传输到LCD1602内
  39   1        LCD1602_EN = 0;  //拉低使能以便于下一次产生上升沿
  40   1      }
  41          /*=================================================
  42          *函数名称：LCD1602_Write_Dat
  43          *函数功能：写LCD1602数据
  44          *调用：Read_Busy();
  45          *输入：dat：需要写入的数据
  46          =================================================*/
  47          void LCD1602_Write_Dat(uint8 dat)
  48          {
  49   1        Read_Busy();  //判断忙，忙则等待
  50   1        LCD1602_RS = 1; //选择为写数据
  51   1        LCD1602_RW = 0; //模式为写
  52   1        LCD1602_DB = dat; //写入8位数据
  53   1        LCD1602_EN = 1;   //拉高使能端 数据被传输到LCD1602内
  54   1        LCD1602_EN = 0;   //拉低使能以便于下一次产生上升沿
C51 COMPILER V9.60.0.0   LCD1602                                                           01/02/2021 20:11:11 PAGE 2   

  55   1      }
  56          /*=================================================
  57          *函数名称：LCD1602_Clear_Screen
  58          *函数功能：清屏
  59          =================================================*/
  60          void LCD1602_Clear_Screen()
  61          {
  62   1        LCD1602_Write_Cmd(0x01);
  63   1      }
  64          /*=================================================
  65          *函数名称：LCD1602_Open_Cursor
  66          *函数功能：打开光标的闪烁效果
  67          =================================================*/
  68          void LCD1602_Open_Cursor()
  69          {
  70   1        LCD1602_Write_Cmd(0x0F);
  71   1      }
  72          /*=================================================
  73          *函数名称：LCD1602_Close_Cursor
  74          *函数功能：关闭光标显示
  75          =================================================*/
  76          void LCD1602_Close_Cursor()
  77          {
  78   1        LCD1602_Write_Cmd(0x0C);
  79   1      }
  80          /*=================================================
  81          *函数名称：LCD1602_Set_Cursor
  82          *函数功能：在指定位置显示光标,设置RAM起始位置
  83          *调用：LCD1602_Write_Cmd();
  84          *输入：x：要显示的横坐标取值0-40，y：要显示的行坐标取值0-1（0为第一行,1为第二行）
  85          =================================================*/
  86          void LCD1602_Set_Cursor(uint8 x, uint8 y)
  87          {
  88   1        if(y) x |= 0x40;
  89   1        x |= 0x80;
  90   1        LCD1602_Write_Cmd(x);
  91   1      }
  92          /*=================================================
  93          *函数名称：LCD1602_Dis_OneChar
  94          *函数功能：在指定位置显示一个字符
  95          *调用：LCD1602_Set_Cursor(x, y); LCD1602_Write_Dat(); 
  96          *输入：x：要显示的横坐标取值0-40，y：要显示的行坐标取值0-1（0为第一行,1为第二行）
  97              dat：需要显示的数据以ASCLL形式显示
  98          =================================================*/
  99          void LCD1602_Dis_OneChar(uint8 x, uint8 y, uint8 dat)
 100          {
 101   1        LCD1602_Set_Cursor(x, y);//设置RAM起始位置
 102   1        LCD1602_Write_Dat(dat);  //写入一个字节的数据 
 103   1      }
 104          /*=================================================
 105          *函数名称：LCD1602_Dis_Str
 106          *函数功能：在指定位置显示字符串
 107          *调用：LCD1602_Set_Cursor(x, y); LCD1602_Write_Dat();
 108          *输入：x：要显示的横坐标取值0-40，y：要显示的行坐标取值0-1（0为第一行,1为第二行）
 109              *str：需要显示的字符串
 110          =================================================*/
 111          void LCD1602_Dis_Str(uint8 x, uint8 y, uint8 *str)
 112          {
 113   1        LCD1602_Set_Cursor(x, y);//设置RAM起始位置
 114   1        while(*str != '\0')      //写入字符串数据
 115   1        {
 116   2          LCD1602_Write_Dat(*str++);
C51 COMPILER V9.60.0.0   LCD1602                                                           01/02/2021 20:11:11 PAGE 3   

 117   2        }
 118   1      }
 119          /*=================================================
 120          *函数名称：Init_LCD1602
 121          *函数功能：1602初始化
 122          *调用： LCD1602_Write_Cmd();
 123          =================================================*/
 124          void Init_LCD1602()
 125          {
 126   1        LCD1602_Write_Cmd(0x38); // 设置16*2显示，5*7点阵，8位数据接口
 127   1        LCD1602_Write_Cmd(0x0c); //开显示,关闭光标
 128   1        LCD1602_Write_Cmd(0x06); //读写一字节后地址指针加1
 129   1        LCD1602_Write_Cmd(0x01); // 清屏
 130   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    147    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

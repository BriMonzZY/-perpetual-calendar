C51 COMPILER V9.60.0.0   LUNAR                                                             01/04/2021 15:27:23 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LUNAR
OBJECT MODULE PLACED IN ..\output\lunar.obj
COMPILER INVOKED BY: D:\app\keil\C51\BIN\C51.EXE ..\source\lunar.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\lunar.lst) TABS(2) OBJECT(..\output\lunar.obj)

line level    source

   1          #define _LUNAR_C
   2          #include "config.h"
   3          #include "lunar.h"
   4          
   5          struct SPDATE SpDate;//阴历
   6          //********阳历转换阴历表************************************
   7          code uchar year_code[597]={
   8                              0x04,0xAe,0x53,    //1901 0
   9                              0x0A,0x57,0x48,    //1902 3
  10                              0x55,0x26,0xBd,    //1903 6
  11                              0x0d,0x26,0x50,    //1904 9
  12                              0x0d,0x95,0x44,    //1905 12
  13                              0x46,0xAA,0xB9,    //1906 15
  14                              0x05,0x6A,0x4d,    //1907 18
  15                              0x09,0xAd,0x42,    //1908 21
  16                              0x24,0xAe,0xB6,    //1909
  17                              0x04,0xAe,0x4A,    //1910
  18                              0x6A,0x4d,0xBe,    //1911
  19                              0x0A,0x4d,0x52,    //1912
  20                              0x0d,0x25,0x46,    //1913
  21                              0x5d,0x52,0xBA,    //1914
  22                              0x0B,0x54,0x4e,    //1915
  23                              0x0d,0x6A,0x43,    //1916
  24                              0x29,0x6d,0x37,    //1917
  25                              0x09,0x5B,0x4B,    //1918
  26                              0x74,0x9B,0xC1,    //1919
  27                              0x04,0x97,0x54,    //1920
  28                              0x0A,0x4B,0x48,    //1921
  29                              0x5B,0x25,0xBC,    //1922
  30                              0x06,0xA5,0x50,    //1923
  31                              0x06,0xd4,0x45,    //1924
  32                              0x4A,0xdA,0xB8,    //1925
  33                              0x02,0xB6,0x4d,    //1926
  34                              0x09,0x57,0x42,    //1927
  35                              0x24,0x97,0xB7,    //1928
  36                              0x04,0x97,0x4A,    //1929
  37                              0x66,0x4B,0x3e,    //1930
  38                              0x0d,0x4A,0x51,    //1931
  39                              0x0e,0xA5,0x46,    //1932
  40                              0x56,0xd4,0xBA,    //1933
  41                              0x05,0xAd,0x4e,    //1934
  42                              0x02,0xB6,0x44,    //1935
  43                              0x39,0x37,0x38,    //1936
  44                              0x09,0x2e,0x4B,    //1937
  45                              0x7C,0x96,0xBf,    //1938
  46                              0x0C,0x95,0x53,    //1939
  47                              0x0d,0x4A,0x48,    //1940
  48                              0x6d,0xA5,0x3B,    //1941
  49                              0x0B,0x55,0x4f,    //1942
  50                              0x05,0x6A,0x45,    //1943
  51                              0x4A,0xAd,0xB9,    //1944
  52                              0x02,0x5d,0x4d,    //1945
  53                              0x09,0x2d,0x42,    //1946
  54                              0x2C,0x95,0xB6,    //1947
C51 COMPILER V9.60.0.0   LUNAR                                                             01/04/2021 15:27:23 PAGE 2   

  55                              0x0A,0x95,0x4A,    //1948
  56                              0x7B,0x4A,0xBd,    //1949
  57                              0x06,0xCA,0x51,    //1950
  58                              0x0B,0x55,0x46,    //1951
  59                              0x55,0x5A,0xBB,    //1952
  60                              0x04,0xdA,0x4e,    //1953
  61                              0x0A,0x5B,0x43,    //1954
  62                              0x35,0x2B,0xB8,    //1955
  63                              0x05,0x2B,0x4C,    //1956
  64                              0x8A,0x95,0x3f,    //1957
  65                              0x0e,0x95,0x52,    //1958
  66                              0x06,0xAA,0x48,    //1959
  67                              0x7A,0xd5,0x3C,    //1960
  68                              0x0A,0xB5,0x4f,    //1961
  69                              0x04,0xB6,0x45,    //1962
  70                              0x4A,0x57,0x39,    //1963
  71                              0x0A,0x57,0x4d,    //1964
  72                              0x05,0x26,0x42,    //1965
  73                              0x3e,0x93,0x35,    //1966
  74                              0x0d,0x95,0x49,    //1967
  75                              0x75,0xAA,0xBe,    //1968
  76                              0x05,0x6A,0x51,    //1969
  77                              0x09,0x6d,0x46,    //1970
  78                              0x54,0xAe,0xBB,    //1971
  79                              0x04,0xAd,0x4f,    //1972
  80                              0x0A,0x4d,0x43,    //1973
  81                              0x4d,0x26,0xB7,    //1974
  82                              0x0d,0x25,0x4B,    //1975
  83                              0x8d,0x52,0xBf,    //1976
  84                              0x0B,0x54,0x52,    //1977
  85                              0x0B,0x6A,0x47,    //1978
  86                              0x69,0x6d,0x3C,    //1979
  87                              0x09,0x5B,0x50,    //1980
  88                              0x04,0x9B,0x45,    //1981
  89                              0x4A,0x4B,0xB9,    //1982
  90                              0x0A,0x4B,0x4d,    //1983
  91                              0xAB,0x25,0xC2,    //1984
  92                              0x06,0xA5,0x54,    //1985
  93                              0x06,0xd4,0x49,    //1986
  94                              0x6A,0xdA,0x3d,    //1987
  95                              0x0A,0xB6,0x51,    //1988
  96                              0x09,0x37,0x46,    //1989
  97                              0x54,0x97,0xBB,    //1990
  98                              0x04,0x97,0x4f,    //1991
  99                              0x06,0x4B,0x44,    //1992
 100                              0x36,0xA5,0x37,    //1993
 101                              0x0e,0xA5,0x4A,    //1994
 102                              0x86,0xB2,0xBf,    //1995
 103                              0x05,0xAC,0x53,    //1996
 104                              0x0A,0xB6,0x47,    //1997
 105                              0x59,0x36,0xBC,    //1998
 106                              0x09,0x2e,0x50,    //1999 294
 107                              0x0C,0x96,0x45,    //2000 297
 108                              0x4d,0x4A,0xB8,    //2001
 109                              0x0d,0x4A,0x4C,    //2002
 110                              0x0d,0xA5,0x41,    //2003
 111                              0x25,0xAA,0xB6,    //2004
 112                              0x05,0x6A,0x49,    //2005
 113                              0x7A,0xAd,0xBd,    //2006
 114                              0x02,0x5d,0x52,    //2007
 115                              0x09,0x2d,0x47,    //2008
 116                              0x5C,0x95,0xBA,    //2009
C51 COMPILER V9.60.0.0   LUNAR                                                             01/04/2021 15:27:23 PAGE 3   

 117                              0x0A,0x95,0x4e,    //2010
 118                              0x0B,0x4A,0x43,    //2011
 119                              0x4B,0x55,0x37,    //2012
 120                              0x0A,0xd5,0x4A,    //2013
 121                              0x95,0x5A,0xBf,    //2014
 122                              0x04,0xBA,0x53,    //2015
 123                              0x0A,0x5B,0x48,    //2016
 124                              0x65,0x2B,0xBC,    //2017
 125                              0x05,0x2B,0x50,    //2018
 126                              0x0A,0x93,0x45,    //2019
 127                              0x47,0x4A,0xB9,    //2020
 128                              0x06,0xAA,0x4C,    //2021
 129                              0x0A,0xd5,0x41,    //2022
 130                              0x24,0xdA,0xB6,    //2023
 131                              0x04,0xB6,0x4A,    //2024
 132                              0x69,0x57,0x3d,    //2025
 133                              0x0A,0x4e,0x51,    //2026
 134                              0x0d,0x26,0x46,    //2027
 135                              0x5e,0x93,0x3A,    //2028
 136                              0x0d,0x53,0x4d,    //2029
 137                              0x05,0xAA,0x43,    //2030
 138                              0x36,0xB5,0x37,    //2031
 139                              0x09,0x6d,0x4B,    //2032
 140                              0xB4,0xAe,0xBf,    //2033
 141                              0x04,0xAd,0x53,    //2034
 142                              0x0A,0x4d,0x48,    //2035
 143                              0x6d,0x25,0xBC,    //2036
 144                              0x0d,0x25,0x4f,    //2037
 145                              0x0d,0x52,0x44,    //2038
 146                              0x5d,0xAA,0x38,    //2039
 147                              0x0B,0x5A,0x4C,    //2040
 148                              0x05,0x6d,0x41,    //2041
 149                              0x24,0xAd,0xB6,    //2042
 150                              0x04,0x9B,0x4A,    //2043
 151                              0x7A,0x4B,0xBe,    //2044
 152                              0x0A,0x4B,0x51,    //2045
 153                              0x0A,0xA5,0x46,    //2046
 154                              0x5B,0x52,0xBA,    //2047
 155                              0x06,0xd2,0x4e,    //2048
 156                              0x0A,0xdA,0x42,    //2049
 157                              0x35,0x5B,0x37,    //2050
 158                              0x09,0x37,0x4B,    //2051
 159                              0x84,0x97,0xC1,    //2052
 160                              0x04,0x97,0x53,    //2053
 161                              0x06,0x4B,0x48,    //2054
 162                              0x66,0xA5,0x3C,    //2055
 163                              0x0e,0xA5,0x4f,    //2056
 164                              0x06,0xB2,0x44,    //2057
 165                              0x4A,0xB6,0x38,    //2058
 166                              0x0A,0xAe,0x4C,    //2059
 167                              0x09,0x2e,0x42,    //2060
 168                              0x3C,0x97,0x35,    //2061
 169                              0x0C,0x96,0x49,    //2062
 170                              0x7d,0x4A,0xBd,    //2063
 171                              0x0d,0x4A,0x51,    //2064
 172                              0x0d,0xA5,0x45,    //2065
 173                              0x55,0xAA,0xBA,    //2066
 174                              0x05,0x6A,0x4e,    //2067
 175                              0x0A,0x6d,0x43,    //2068
 176                              0x45,0x2e,0xB7,    //2069
 177                              0x05,0x2d,0x4B,    //2070
 178                              0x8A,0x95,0xBf,    //2071
C51 COMPILER V9.60.0.0   LUNAR                                                             01/04/2021 15:27:23 PAGE 4   

 179                              0x0A,0x95,0x53,    //2072
 180                              0x0B,0x4A,0x47,    //2073
 181                              0x6B,0x55,0x3B,    //2074
 182                              0x0A,0xd5,0x4f,    //2075
 183                              0x05,0x5A,0x45,    //2076
 184                              0x4A,0x5d,0x38,    //2077
 185                              0x0A,0x5B,0x4C,    //2078
 186                              0x05,0x2B,0x42,    //2079
 187                              0x3A,0x93,0xB6,    //2080
 188                              0x06,0x93,0x49,    //2081
 189                              0x77,0x29,0xBd,    //2082
 190                              0x06,0xAA,0x51,    //2083
 191                              0x0A,0xd5,0x46,    //2084
 192                              0x54,0xdA,0xBA,    //2085
 193                              0x04,0xB6,0x4e,    //2086
 194                              0x0A,0x57,0x43,    //2087
 195                              0x45,0x27,0x38,    //2088
 196                              0x0d,0x26,0x4A,    //2089
 197                              0x8e,0x93,0x3e,    //2090
 198                              0x0d,0x52,0x52,    //2091
 199                              0x0d,0xAA,0x47,    //2092
 200                              0x66,0xB5,0x3B,    //2093
 201                              0x05,0x6d,0x4f,    //2094
 202                              0x04,0xAe,0x45,    //2095
 203                              0x4A,0x4e,0xB9,    //2096
 204                              0x0A,0x4d,0x4C,    //2097
 205                              0x0d,0x15,0x41,    //2098
 206                              0x2d,0x92,0xB5,    //2099
 207          };
 208          
 209          ///月份数据表
 210          code uchar day_code1[9]={0x0,0x1f,0x3b,0x5a,0x78,0x97,0xb5,0xd4,0xf3};
 211          code uint day_code2[3]={0x111,0x130,0x14e};
 212          
 213          /*
 214          函数功能:输入BCD阳历数据,输出BCD阴历数据(只允许1901-2099年)
 215          调用函数示例:Conversion(c_sun,year_sun,month_sun,day_sun)
 216          如:计算2004年10月16日Conversion(0,0x4,0x10,0x16);
 217          c_sun,year_sun,month_sun,day_sun均为BCD数据,c_sun为世纪标志位,c_sun=0为21世
 218          纪,c_sun=1为19世纪
 219          调用函数后,原有数据不变,读c_moon,year_moon,month_moon,day_moon得出阴历BCD数据
 220          */
 221          
 222          bit c_moon;
 223          //子函数,用于读取数据表中农历月的大月或小月,如果该月为大返回1,为小返回0
 224          bit get_moon_day(uchar month_p,uint table_addr)
 225          {
 226   1        uchar temp10;
 227   1          switch (month_p){
 228   2              case 1:{temp10=year_code[table_addr]&0x08;
 229   3                   if (temp10==0)return(0);else return(1);}
 230   2              case 2:{temp10=year_code[table_addr]&0x04;
 231   3                   if (temp10==0)return(0);else return(1);}
 232   2              case 3:{temp10=year_code[table_addr]&0x02;
 233   3                   if (temp10==0)return(0);else return(1);}
 234   2              case 4:{temp10=year_code[table_addr]&0x01;
 235   3                   if (temp10==0)return(0);else return(1);}
 236   2              case 5:{temp10=year_code[table_addr+1]&0x80;
 237   3                   if (temp10==0) return(0);else return(1);}
 238   2              case 6:{temp10=year_code[table_addr+1]&0x40;
 239   3                   if (temp10==0)return(0);else return(1);}
 240   2              case 7:{temp10=year_code[table_addr+1]&0x20;
C51 COMPILER V9.60.0.0   LUNAR                                                             01/04/2021 15:27:23 PAGE 5   

 241   3                   if (temp10==0)return(0);else return(1);}
 242   2              case 8:{temp10=year_code[table_addr+1]&0x10;
 243   3                   if (temp10==0)return(0);else return(1);}
 244   2              case 9:{temp10=year_code[table_addr+1]&0x08;
 245   3                   if (temp10==0)return(0);else return(1);}
 246   2              case 10:{temp10=year_code[table_addr+1]&0x04;
 247   3                   if (temp10==0)return(0);else return(1);}
 248   2              case 11:{temp10=year_code[table_addr+1]&0x02;
 249   3                   if (temp10==0)return(0);else return(1);}
 250   2              case 12:{temp10=year_code[table_addr+1]&0x01;
 251   3                   if (temp10==0)return(0);else return(1);}
 252   2              case 13:{temp10=year_code[table_addr+2]&0x80;
 253   3                   if (temp10==0)return(0);else return(1);}
 254   2          default:return(2);
 255   2          }
 256   1      }
 257          
 258          /*
 259          函数功能:输入BCD阳历数据,输出BCD阴历数据(只允许1901-2099年)
 260          调用函数示例:Conversion(c_sun,year_sun,month_sun,day_sun)
 261          如:计算2004年10月16日Conversion(0,0x4,0x10,0x16);
 262          c_sun,year_sun,month_sun,day_sun均为BCD数据,c_sun为世纪标志位,c_sun=0为21世
 263          纪,c_sun=1为19世纪
 264          调用函数后,原有数据不变,读c_moon,year_moon,month_moon,day_moon得出阴历BCD数据
 265          */
 266          
 267          void Conversion(bit c,uchar year,uchar month,uchar day)
 268          {                         //c=0 为21世纪,c=1 为19世纪 输入输出数据均为BCD数据
 269   1          uchar temp1,temp2,temp3,month_p;
 270   1          uint temp4,table_addr;
 271   1          bit flag2,flag_y;
 272   1          temp1=year/16;   //BCD->hex 先把数据转换为十六进制
 273   1          temp2=year%16;
 274   1          year=temp1*10+temp2;
 275   1        //year=temp1*16+temp2;
 276   1          temp1=month/16;
 277   1          temp2=month%16;
 278   1          month=temp1*10+temp2;
 279   1        //month=temp1*16+temp2;
 280   1          temp1=day/16;
 281   1          temp2=day%16;
 282   1          day=temp1*10+temp2;
 283   1        //day=temp1*16+temp2;
 284   1          //定位数据表地址
 285   1          if(c==0){                   
 286   2              table_addr=(year+0x64-1)*0x3;
 287   2          }
 288   1          else {
 289   2              table_addr=(year-1)*0x3;
 290   2          }
 291   1          //定位数据表地址完成
 292   1          //取当年春节所在的公历月份
 293   1          temp1=year_code[table_addr+2]&0x60; 
 294   1          temp1=_cror_(temp1,5);
 295   1          //取当年春节所在的公历月份完成
 296   1          //取当年春节所在的公历日
 297   1          temp2=year_code[table_addr+2]&0x1f; 
 298   1          //取当年春节所在的公历日完成
 299   1          // 计算当年春年离当年元旦的天数,春节只会在公历1月或2月
 300   1          if(temp1==0x1){  
 301   2              temp3=temp2-1;  
 302   2          }  
C51 COMPILER V9.60.0.0   LUNAR                                                             01/04/2021 15:27:23 PAGE 6   

 303   1          else{
 304   2              temp3=temp2+0x1f-1;        
 305   2          }
 306   1          // 计算当年春年离当年元旦的天数完成
 307   1          //计算公历日离当年元旦的天数,为了减少运算,用了两个表
 308   1          //day_code1[9],day_code2[3]
 309   1          //如果公历月在九月或前,天数会少于0xff,用表day_code1[9],
 310   1          //在九月后,天数大于0xff,用表day_code2[3]
 311   1          //如输入公历日为8月10日,则公历日离元旦天数为day_code1[8-1]+10-1
 312   1          //如输入公历日为11月10日,则公历日离元旦天数为day_code2[11-10]+10-1
 313   1          if (month<10){ 
 314   2              temp4=day_code1[month-1]+day-1;
 315   2          }
 316   1          else{
 317   2              temp4=day_code2[month-10]+day-1;
 318   2          }
 319   1          if ((month>0x2)&&(year%0x4==0)){  //如果公历月大于2月并且该年的2月为闰月,天数加1
 320   2              temp4+=1;
 321   2          }
 322   1          //计算公历日离当年元旦的天数完成
 323   1          //判断公历日在春节前还是春节后
 324   1          if (temp4>=temp3){ //公历日在春节后或就是春节当日使用下面代码进行运算
 325   2              temp4-=temp3;
 326   2              month=0x1;
 327   2              month_p=0x1;  //month_p为月份指向,公历日在春节前或就是春节当日month_p指向首月
 328   2              flag2=get_moon_day(month_p,table_addr); //检查该农历月为大小还是小月,大月返回1,小月返回0
 329   2              flag_y=0;
 330   2              if(flag2==0)temp1=0x1d; //小月29天
 331   2              else temp1=0x1e; //大小30天
 332   2              temp2=year_code[table_addr]&0xf0;
 333   2              temp2=_cror_(temp2,4);  //从数据表中取该年的闰月月份,如为0则该年无闰月
 334   2              while(temp4>=temp1){
 335   3                  temp4-=temp1;
 336   3                  month_p+=1;
 337   3                  if(month==temp2){
 338   4                  flag_y=~flag_y;
 339   4                  if(flag_y==0)month+=1;
 340   4                  }
 341   3                  else month+=1;
 342   3                  flag2=get_moon_day(month_p,table_addr);
 343   3                  if(flag2==0)temp1=0x1d;
 344   3                  else temp1=0x1e;
 345   3              }
 346   2              day=temp4+1;
 347   2          }
 348   1          else{  //公历日在春节前使用下面代码进行运算
 349   2              temp3-=temp4;
 350   2              if (year==0x0){year=0x63;c=1;}
 351   2              else year-=1;
 352   2              table_addr-=0x3;
 353   2              month=0xc;
 354   2              temp2=year_code[table_addr]&0xf0;
 355   2              temp2=_cror_(temp2,4);
 356   2              if (temp2==0)
 357   2            month_p=0xc; 
 358   2              else
 359   2            month_p=0xd; //
 360   2              
 361   2               //month_p为月份指向,如果当年有闰月,一年有十三个月,月指向13,无闰月指向12
 362   2              
 363   2              flag_y=0;
 364   2              flag2=get_moon_day(month_p,table_addr);
C51 COMPILER V9.60.0.0   LUNAR                                                             01/04/2021 15:27:23 PAGE 7   

 365   2              if(flag2==0)temp1=0x1d;
 366   2              else temp1=0x1e;
 367   2              while(temp3>temp1){
 368   3                  temp3-=temp1;
 369   3                  month_p-=1;
 370   3                  if(flag_y==0)month-=1;
 371   3                  if(month==temp2)flag_y=~flag_y;
 372   3                  flag2=get_moon_day(month_p,table_addr);
 373   3                  if(flag2==0)temp1=0x1d;
 374   3                  else temp1=0x1e;
 375   3               }
 376   2              day=temp1-temp3+1;
 377   2          }
 378   1      //    c_moon=c;               
 379   1                    //HEX->BCD ,运算结束后,把数据转换为BCD数据
 380   1          temp1=year/10;
 381   1          temp1=_crol_(temp1,4);
 382   1          temp2=year%10;
 383   1          SpDate.year=temp1|temp2;
 384   1          temp1=month/10;
 385   1          temp1=_crol_(temp1,4);
 386   1          temp2=month%10;
 387   1          SpDate.mon=temp1|temp2;
 388   1          temp1=day/10;
 389   1          temp1=_crol_(temp1,4);
 390   1          temp2=day%10;
 391   1          SpDate.day=temp1|temp2;
 392   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    904    ----
   CONSTANT SIZE    =    612    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
